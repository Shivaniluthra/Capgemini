/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component } from '@angular/core';
import { AlertsService } from './alerts.service';
/**
 * @record
 */
export function Message() { }
function Message_tsickle_Closure_declarations() {
    /** @type {?} */
    Message.prototype.message;
    /** @type {?} */
    Message.prototype.type;
    /* TODO: handle strange member:
    [key: string]: string;
    */
}
var AlertsComponent = /** @class */ (function () {
    function AlertsComponent(alerts) {
        this.alerts = alerts;
        this.messages = [];
    }
    /**
     * @return {?}
     */
    AlertsComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.alerts.getSubject().subscribe(function (object) {
            object["icon"] = _this.alerts.getConfig(object.type, 'icon');
            _this.timeout = _this.alerts.getConfig(object.type, 'timeout');
            console.log('this.timeout', _this.timeout);
            _this.messages.push(object);
            if (_this.timeout > 0) {
                setTimeout(function () {
                    _this.removeMessage(object);
                }, _this.timeout * 1000);
            }
        });
    };
    /**
     * @param {?} message
     * @return {?}
     */
    AlertsComponent.prototype.removeMessage = /**
     * @param {?} message
     * @return {?}
     */
    function (message) {
        this.messages.splice(this.messages.indexOf(message), 1);
    };
    AlertsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-alerts',
                    template: "<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n<div  class=\"alertsContainer\">\n\t<div class=\"alertsRow {{message.type}}\" *ngFor=\"let message of messages\">\n\t\t<div class=\"iconpanel\"><i class=\"mat-icon material-icons\">{{message.icon}}</i></div>\n\t\t<div class=\"messagepanel\">{{message.message}}</div>\n\t\t<div class=\"closeicon\"><a (click)=\"removeMessage(message)\" href=\"#\">X</a></div>\n  \t</div>\n</div>",
                    styles: [".alertsContainer{position:absolute;top:10px;right:20px}.alertsContainer .material-icons{padding-top:36%}.alertsContainer .alertsRow{margin-top:12px;transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);display:block;position:relative;box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12);border-radius:2px;transition:3s opacity 0;float:left;clear:both}.alertsContainer .alertsRow .iconpanel{float:left;width:50px;padding:15px;text-align:center;height:51px}.alertsContainer .alertsRow .messagepanel{float:left;height:41px;padding:20px;text-align:left;max-width:353px;width:350px}.alertsContainer .alertsRow .closeicon{position:absolute;top:10px;right:10px;display:none;text-decoration:none}.alertsContainer .alertsRow:hover .closeicon{display:block}.alertsContainer .alertsRow.error{border:1px solid #d80202}.alertsContainer .alertsRow.error .iconpanel{background:#d80202}.alertsContainer .alertsRow.error .messagepanel{color:#000;background:#fff}.alertsContainer .alertsRow.error .closeicon{color:#000}.alertsContainer .alertsRow.error .closeicon a{color:#000;text-decoration:none;font-size:12px}.alertsContainer .alertsRow.success{border:1px solid #27b235}.alertsContainer .alertsRow.success .iconpanel{background:#27b235;color:#fff}.alertsContainer .alertsRow.success .messagepanel{color:#000;background:#fff}.alertsContainer .alertsRow.success .closeicon{color:#000}.alertsContainer .alertsRow.success .closeicon a{color:#000;text-decoration:none;font-size:12px}.alertsContainer .alertsRow.warn{border:1px solid #ffc549}.alertsContainer .alertsRow.warn .iconpanel{background:#ffc549;color:#fff}.alertsContainer .alertsRow.warn .messagepanel{color:#000;background:#fff}.alertsContainer .alertsRow.warn .closeicon{color:#000}.alertsContainer .alertsRow.warn .closeicon a{color:#000;text-decoration:none;font-size:12px}"]
                },] },
    ];
    /** @nocollapse */
    AlertsComponent.ctorParameters = function () { return [
        { type: AlertsService, },
    ]; };
    return AlertsComponent;
}());
export { AlertsComponent };
function AlertsComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    AlertsComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    AlertsComponent.ctorParameters;
    /** @type {?} */
    AlertsComponent.prototype.messages;
    /** @type {?} */
    AlertsComponent.prototype.timeout;
    /** @type {?} */
    AlertsComponent.prototype.alerts;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxlcnRzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FsZXJ0cy8iLCJzb3VyY2VzIjpbImxpYi9hbGVydHMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7O0lBeUIvQyx5QkFBb0IsTUFBcUI7UUFBckIsV0FBTSxHQUFOLE1BQU0sQ0FBZTt3QkFGYixFQUFFO0tBSTdCOzs7O0lBRUQsa0NBQVE7OztJQUFSO1FBQUEsaUJBWUM7UUFYQyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxDQUFDLFNBQVMsQ0FBRSxVQUFDLE1BQWU7WUFDaEQsTUFBTSxXQUFRLEtBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUMsTUFBTSxDQUFDLENBQUM7WUFDeEQsS0FBSSxDQUFDLE9BQU8sR0FBRyxLQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQzVELE9BQU8sQ0FBQyxHQUFHLENBQUMsY0FBYyxFQUFDLEtBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUN6QyxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUMzQixFQUFFLENBQUEsQ0FBQyxLQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3BCLFVBQVUsQ0FBRTtvQkFDVixLQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2lCQUM1QixFQUFDLEtBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLENBQUM7YUFDeEI7U0FDRixDQUFDLENBQUM7S0FDTjs7Ozs7SUFFRCx1Q0FBYTs7OztJQUFiLFVBQWMsT0FBZTtRQUN6QixJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQztLQUMxRDs7Z0JBbkNGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsWUFBWTtvQkFDdEIsUUFBUSxFQUFFLHVkQU9MO29CQUNMLE1BQU0sRUFBRSxDQUFDLHMwREFBczBELENBQUM7aUJBQ2oxRDs7OztnQkFyQlEsYUFBYTs7MEJBRHRCOztTQXVCYSxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFsZXJ0c1NlcnZpY2UgfSBmcm9tICcuL2FsZXJ0cy5zZXJ2aWNlJztcblxuXG5cbmV4cG9ydCBpbnRlcmZhY2UgTWVzc2FnZSB7XG4gIG1lc3NhZ2U6IHN0cmluZztcbiAgdHlwZTogc3RyaW5nO1xuICBba2V5OiBzdHJpbmddOiBzdHJpbmc7XG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FwcC1hbGVydHMnLFxuICB0ZW1wbGF0ZTogYDxsaW5rIGhyZWY9XCJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2ljb24/ZmFtaWx5PU1hdGVyaWFsK0ljb25zXCIgcmVsPVwic3R5bGVzaGVldFwiPlxuPGRpdiAgY2xhc3M9XCJhbGVydHNDb250YWluZXJcIj5cblx0PGRpdiBjbGFzcz1cImFsZXJ0c1JvdyB7e21lc3NhZ2UudHlwZX19XCIgKm5nRm9yPVwibGV0IG1lc3NhZ2Ugb2YgbWVzc2FnZXNcIj5cblx0XHQ8ZGl2IGNsYXNzPVwiaWNvbnBhbmVsXCI+PGkgY2xhc3M9XCJtYXQtaWNvbiBtYXRlcmlhbC1pY29uc1wiPnt7bWVzc2FnZS5pY29ufX08L2k+PC9kaXY+XG5cdFx0PGRpdiBjbGFzcz1cIm1lc3NhZ2VwYW5lbFwiPnt7bWVzc2FnZS5tZXNzYWdlfX08L2Rpdj5cblx0XHQ8ZGl2IGNsYXNzPVwiY2xvc2VpY29uXCI+PGEgKGNsaWNrKT1cInJlbW92ZU1lc3NhZ2UobWVzc2FnZSlcIiBocmVmPVwiI1wiPlg8L2E+PC9kaXY+XG4gIFx0PC9kaXY+XG48L2Rpdj5gLFxuICBzdHlsZXM6IFtgLmFsZXJ0c0NvbnRhaW5lcntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MTBweDtyaWdodDoyMHB4fS5hbGVydHNDb250YWluZXIgLm1hdGVyaWFsLWljb25ze3BhZGRpbmctdG9wOjM2JX0uYWxlcnRzQ29udGFpbmVyIC5hbGVydHNSb3d7bWFyZ2luLXRvcDoxMnB4O3RyYW5zaXRpb246Ym94LXNoYWRvdyAyODBtcyBjdWJpYy1iZXppZXIoLjQsMCwuMiwxKTtkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOnJlbGF0aXZlO2JveC1zaGFkb3c6MCAzcHggMXB4IC0ycHggcmdiYSgwLDAsMCwuMiksMCAycHggMnB4IDAgcmdiYSgwLDAsMCwuMTQpLDAgMXB4IDVweCAwIHJnYmEoMCwwLDAsLjEyKTtib3JkZXItcmFkaXVzOjJweDt0cmFuc2l0aW9uOjNzIG9wYWNpdHkgMDtmbG9hdDpsZWZ0O2NsZWFyOmJvdGh9LmFsZXJ0c0NvbnRhaW5lciAuYWxlcnRzUm93IC5pY29ucGFuZWx7ZmxvYXQ6bGVmdDt3aWR0aDo1MHB4O3BhZGRpbmc6MTVweDt0ZXh0LWFsaWduOmNlbnRlcjtoZWlnaHQ6NTFweH0uYWxlcnRzQ29udGFpbmVyIC5hbGVydHNSb3cgLm1lc3NhZ2VwYW5lbHtmbG9hdDpsZWZ0O2hlaWdodDo0MXB4O3BhZGRpbmc6MjBweDt0ZXh0LWFsaWduOmxlZnQ7bWF4LXdpZHRoOjM1M3B4O3dpZHRoOjM1MHB4fS5hbGVydHNDb250YWluZXIgLmFsZXJ0c1JvdyAuY2xvc2VpY29ue3Bvc2l0aW9uOmFic29sdXRlO3RvcDoxMHB4O3JpZ2h0OjEwcHg7ZGlzcGxheTpub25lO3RleHQtZGVjb3JhdGlvbjpub25lfS5hbGVydHNDb250YWluZXIgLmFsZXJ0c1Jvdzpob3ZlciAuY2xvc2VpY29ue2Rpc3BsYXk6YmxvY2t9LmFsZXJ0c0NvbnRhaW5lciAuYWxlcnRzUm93LmVycm9ye2JvcmRlcjoxcHggc29saWQgI2Q4MDIwMn0uYWxlcnRzQ29udGFpbmVyIC5hbGVydHNSb3cuZXJyb3IgLmljb25wYW5lbHtiYWNrZ3JvdW5kOiNkODAyMDJ9LmFsZXJ0c0NvbnRhaW5lciAuYWxlcnRzUm93LmVycm9yIC5tZXNzYWdlcGFuZWx7Y29sb3I6IzAwMDtiYWNrZ3JvdW5kOiNmZmZ9LmFsZXJ0c0NvbnRhaW5lciAuYWxlcnRzUm93LmVycm9yIC5jbG9zZWljb257Y29sb3I6IzAwMH0uYWxlcnRzQ29udGFpbmVyIC5hbGVydHNSb3cuZXJyb3IgLmNsb3NlaWNvbiBhe2NvbG9yOiMwMDA7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Zm9udC1zaXplOjEycHh9LmFsZXJ0c0NvbnRhaW5lciAuYWxlcnRzUm93LnN1Y2Nlc3N7Ym9yZGVyOjFweCBzb2xpZCAjMjdiMjM1fS5hbGVydHNDb250YWluZXIgLmFsZXJ0c1Jvdy5zdWNjZXNzIC5pY29ucGFuZWx7YmFja2dyb3VuZDojMjdiMjM1O2NvbG9yOiNmZmZ9LmFsZXJ0c0NvbnRhaW5lciAuYWxlcnRzUm93LnN1Y2Nlc3MgLm1lc3NhZ2VwYW5lbHtjb2xvcjojMDAwO2JhY2tncm91bmQ6I2ZmZn0uYWxlcnRzQ29udGFpbmVyIC5hbGVydHNSb3cuc3VjY2VzcyAuY2xvc2VpY29ue2NvbG9yOiMwMDB9LmFsZXJ0c0NvbnRhaW5lciAuYWxlcnRzUm93LnN1Y2Nlc3MgLmNsb3NlaWNvbiBhe2NvbG9yOiMwMDA7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Zm9udC1zaXplOjEycHh9LmFsZXJ0c0NvbnRhaW5lciAuYWxlcnRzUm93Lndhcm57Ym9yZGVyOjFweCBzb2xpZCAjZmZjNTQ5fS5hbGVydHNDb250YWluZXIgLmFsZXJ0c1Jvdy53YXJuIC5pY29ucGFuZWx7YmFja2dyb3VuZDojZmZjNTQ5O2NvbG9yOiNmZmZ9LmFsZXJ0c0NvbnRhaW5lciAuYWxlcnRzUm93Lndhcm4gLm1lc3NhZ2VwYW5lbHtjb2xvcjojMDAwO2JhY2tncm91bmQ6I2ZmZn0uYWxlcnRzQ29udGFpbmVyIC5hbGVydHNSb3cud2FybiAuY2xvc2VpY29ue2NvbG9yOiMwMDB9LmFsZXJ0c0NvbnRhaW5lciAuYWxlcnRzUm93Lndhcm4gLmNsb3NlaWNvbiBhe2NvbG9yOiMwMDA7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Zm9udC1zaXplOjEycHh9YF1cbn0pXG5leHBvcnQgY2xhc3MgQWxlcnRzQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgcHVibGljIG1lc3NhZ2VzOiBPYmplY3RbXSA9IFtdO1xuICBwdWJsaWMgdGltZW91dDogYW55O1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGFsZXJ0czogQWxlcnRzU2VydmljZSkgeyBcblxuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5hbGVydHMuZ2V0U3ViamVjdCgpLnN1YnNjcmliZSggKG9iamVjdDogTWVzc2FnZSkgPT4ge1xuICAgICAgICBvYmplY3QuaWNvbiA9IHRoaXMuYWxlcnRzLmdldENvbmZpZyhvYmplY3QudHlwZSwnaWNvbicpO1xuICAgICAgICB0aGlzLnRpbWVvdXQgPSB0aGlzLmFsZXJ0cy5nZXRDb25maWcob2JqZWN0LnR5cGUsJ3RpbWVvdXQnKTsgICAgXG4gICAgICAgIGNvbnNvbGUubG9nKCd0aGlzLnRpbWVvdXQnLHRoaXMudGltZW91dCk7XG4gICAgICAgIHRoaXMubWVzc2FnZXMucHVzaChvYmplY3QpO1xuICAgICAgICBpZih0aGlzLnRpbWVvdXQgPiAwKSB7XG4gICAgICAgICAgc2V0VGltZW91dCggKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5yZW1vdmVNZXNzYWdlKG9iamVjdCk7XG4gICAgICAgICAgfSx0aGlzLnRpbWVvdXQgKiAxMDAwKTtcbiAgICAgICAgfVxuICAgICAgfSk7ICAgIFxuICB9XG5cbiAgcmVtb3ZlTWVzc2FnZShtZXNzYWdlOiBPYmplY3QpIHtcbiAgICAgIHRoaXMubWVzc2FnZXMuc3BsaWNlKHRoaXMubWVzc2FnZXMuaW5kZXhPZihtZXNzYWdlKSwxKTtcbiAgfVxuXG59Il19