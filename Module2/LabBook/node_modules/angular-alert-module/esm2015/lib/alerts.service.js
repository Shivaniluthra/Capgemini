/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Subject } from 'rxjs';
import { AlertsConfigData } from './alerts.config';
/**
 * @record
 */
export function AlertsInterface() { }
function AlertsInterface_tsickle_Closure_declarations() {
    /** @type {?} */
    AlertsInterface.prototype.alertsSubject;
    /** @type {?} */
    AlertsInterface.prototype.setMessage;
    /** @type {?} */
    AlertsInterface.prototype.getConfig;
    /** @type {?} */
    AlertsInterface.prototype.setConfig;
}
export class AlertsService {
    constructor() {
        // Observable alerts
        this.alertsSubject = new Subject();
    }
    /**
     * @param {?} message
     * @param {?} type
     * @return {?}
     */
    setMessage(message, type) {
        this.alertsSubject.next({ message: message, type: type });
    }
    /**
     * @return {?}
     */
    getSubject() {
        return this.alertsSubject.asObservable();
    }
    /**
     * @param {?} messagetype
     * @param {?} key
     * @return {?}
     */
    getConfig(messagetype, key) {
        if (typeof AlertsConfigData[messagetype] == 'undefined') {
            return AlertsConfigData["DefaultSettings"][key];
        }
        else {
            return (typeof AlertsConfigData[messagetype][key] != 'undefined') ? AlertsConfigData[messagetype][key] : AlertsConfigData["DefaultSettings"][key];
        }
    }
    /**
     * @param {?} messagetype
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    setConfig(messagetype, key, value) {
        if (typeof AlertsConfigData[messagetype] == 'undefined') {
            AlertsConfigData[messagetype] = {};
        }
        AlertsConfigData[messagetype][key] = value;
    }
    /**
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    setDefaults(key, value) {
        AlertsConfigData["DefaultSettings"][key] = value;
    }
}
AlertsService.decorators = [
    { type: Injectable },
];
/** @nocollapse */
AlertsService.ctorParameters = () => [];
function AlertsService_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    AlertsService.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    AlertsService.ctorParameters;
    /** @type {?} */
    AlertsService.prototype.alertsSubject;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxlcnRzLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbGVydHMvIiwic291cmNlcyI6WyJsaWIvYWxlcnRzLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFTLE1BQU0sQ0FBQztBQUVsQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7O0FBV25ELE1BQU07SUFLSjs7NkJBRmdCLElBQUksT0FBTyxFQUFVO0tBR3BDOzs7Ozs7SUFHRCxVQUFVLENBQUMsT0FBZSxFQUFFLElBQVk7UUFDdEMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsRUFBQyxPQUFPLEVBQUMsT0FBTyxFQUFDLElBQUksRUFBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDO0tBQ3REOzs7O0lBRUQsVUFBVTtRQUNSLE1BQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLFlBQVksRUFBRSxDQUFDO0tBQzFDOzs7Ozs7SUFFRCxTQUFTLENBQUMsV0FBbUIsRUFBRSxHQUFXO1FBQ3hDLEVBQUUsQ0FBQSxDQUFDLE9BQU8sZ0JBQWdCLENBQUMsV0FBVyxDQUFDLElBQUksV0FBVyxDQUFDLENBQUMsQ0FBQztZQUNyRCxNQUFNLENBQUMsZ0JBQWdCLG9CQUFpQixHQUFHLENBQUMsQ0FBQztTQUNoRDtRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ0osTUFBTSxDQUFDLENBQUMsT0FBTyxnQkFBZ0IsQ0FBQyxXQUFXLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUEsQ0FBQyxDQUFDLGdCQUFnQixvQkFBaUIsR0FBRyxDQUFDLENBQUM7U0FDako7S0FDRjs7Ozs7OztJQUVELFNBQVMsQ0FBQyxXQUFtQixFQUFFLEdBQVcsRUFBRSxLQUFhO1FBQ3ZELEVBQUUsQ0FBQSxDQUFDLE9BQU8sZ0JBQWdCLENBQUMsV0FBVyxDQUFDLElBQUksV0FBVyxDQUFDLENBQUMsQ0FBQztZQUNyRCxnQkFBZ0IsQ0FBQyxXQUFXLENBQUMsR0FBRyxFQUFFLENBQUM7U0FDdEM7UUFDRCxnQkFBZ0IsQ0FBQyxXQUFXLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUM7S0FDNUM7Ozs7OztJQUVELFdBQVcsQ0FBQyxHQUFXLEVBQUUsS0FBVTtRQUNqQyxnQkFBZ0Isb0JBQWlCLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQztLQUMvQzs7O1lBbkNGLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTdWJqZWN0IH0gICAgZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gICAgZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBBbGVydHNDb25maWdEYXRhIH0gZnJvbSAnLi9hbGVydHMuY29uZmlnJztcblxuXG5leHBvcnQgaW50ZXJmYWNlIEFsZXJ0c0ludGVyZmFjZSB7XG4gIGFsZXJ0c1N1YmplY3Q6U3ViamVjdDxPYmplY3Q+O1xuICBzZXRNZXNzYWdlKG1lc3NhZ2U6IHN0cmluZywgdHlwZTogc3RyaW5nKTogdm9pZDtcbiAgZ2V0Q29uZmlnKG1lc3NhZ2U6IHN0cmluZywga2V5OiBzdHJpbmcpOiBzdHJpbmc7XG4gIHNldENvbmZpZyhtZXNzYWdldHlwZTogc3RyaW5nLCBrZXk6IHN0cmluZywgdmFsdWU6IHN0cmluZyk6IHZvaWQ7XG59XG4gXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQWxlcnRzU2VydmljZSBpbXBsZW1lbnRzIEFsZXJ0c0ludGVyZmFjZSAgICB7XG4gXG4gIC8vIE9ic2VydmFibGUgYWxlcnRzXG4gIGFsZXJ0c1N1YmplY3QgPSBuZXcgU3ViamVjdDxPYmplY3Q+KCk7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gIH1cblxuICAvLyBTZXJ2aWNlIG1lc3NhZ2UgY29tbWFuZHNcbiAgc2V0TWVzc2FnZShtZXNzYWdlOiBzdHJpbmcsIHR5cGU6IHN0cmluZykge1xuICAgIHRoaXMuYWxlcnRzU3ViamVjdC5uZXh0KHttZXNzYWdlOm1lc3NhZ2UsdHlwZTp0eXBlfSk7XG4gIH1cblxuICBnZXRTdWJqZWN0KCk6IGFueSB7XG4gICAgcmV0dXJuIHRoaXMuYWxlcnRzU3ViamVjdC5hc09ic2VydmFibGUoKTtcbiAgfVxuXG4gIGdldENvbmZpZyhtZXNzYWdldHlwZTogc3RyaW5nLCBrZXk6IHN0cmluZykgOiBzdHJpbmcge1xuICAgIGlmKHR5cGVvZiBBbGVydHNDb25maWdEYXRhW21lc3NhZ2V0eXBlXSA9PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gQWxlcnRzQ29uZmlnRGF0YS5EZWZhdWx0U2V0dGluZ3Nba2V5XTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gKHR5cGVvZiBBbGVydHNDb25maWdEYXRhW21lc3NhZ2V0eXBlXVtrZXldICE9ICd1bmRlZmluZWQnKSA/IEFsZXJ0c0NvbmZpZ0RhdGFbbWVzc2FnZXR5cGVdW2tleV06IEFsZXJ0c0NvbmZpZ0RhdGEuRGVmYXVsdFNldHRpbmdzW2tleV07XG4gICAgfSAgICAgIFxuICB9XG5cbiAgc2V0Q29uZmlnKG1lc3NhZ2V0eXBlOiBzdHJpbmcsIGtleTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nKSB7XG4gICAgaWYodHlwZW9mIEFsZXJ0c0NvbmZpZ0RhdGFbbWVzc2FnZXR5cGVdID09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIEFsZXJ0c0NvbmZpZ0RhdGFbbWVzc2FnZXR5cGVdID0ge307XG4gICAgfVxuICAgIEFsZXJ0c0NvbmZpZ0RhdGFbbWVzc2FnZXR5cGVdW2tleV0gPSB2YWx1ZTtcbiAgfVxuXG4gIHNldERlZmF1bHRzKGtleTogc3RyaW5nLCB2YWx1ZTogYW55KSB7XG4gICAgQWxlcnRzQ29uZmlnRGF0YS5EZWZhdWx0U2V0dGluZ3Nba2V5XSA9IHZhbHVlOyAgICBcbiAgfVxuXG59Il19